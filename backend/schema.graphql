# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Address {
  id: ID!
  municipality: String!
  postalCode: String!
  street: String!
  streetNumber: String!
}

input AddressInput {
  municipality: String!
  postalCode: String!
  street: String!
  streetNumber: String!
}

type AddressSuggestion {
  municipality: String!
  postalCode: String!
  street: String!
  streetNumber: String!
}

type Article {
  attachment: Attachment
  content: String!
  coverImageAttachmentId: ID
  date: DateTimeISO!
  id: ID!
  title: String!
}

type Asset {
  bankName: String
  carMakeName: String
  carRegistrationDate: DateTimeISO
  carType: String
  cin: String
  description: String
  id: ID!
  name: String!
  proceedingId: ID!
  type: String!
  value: Float!
}

input AssetInput {
  bankName: String
  carMakeName: String
  carRegistrationDate: DateTimeISO
  carType: String
  cin: String
  description: String
  name: String!
  proceedingId: ID!
  type: String!
  value: Float!
}

type Attachment {
  fileUuid: String!
  filename: String!
  id: ID!
  mimetype: String!
  proceedingId: ID
  uploadDate: DateTimeISO!
}

type Beneficiary {
  id: ID!
  proceedingId: ID
  user: User
  userId: ID!
}

input BeneficiaryInput {
  proceedingId: ID
  userId: ID!
}

type Chat {
  chatMessages: [ChatMessage!]
  id: ID!
  proceedingId: ID!
}

type ChatMessage {
  body: String!
  chatId: ID!
  createdAt: DateTimeISO!
  displayName: String
  id: ID!
  userId: ID!
}

input CreateArticleInput {
  content: String!
  coverImage: Upload!
  date: DateTimeISO!
  title: String!
}

input CreateNotaryInput {
  postalCode: String
  userId: ID
}

input CreateProceedingInput {
  beneficiaryUserIds: [ID!]!
  deceasedPerson: DeceasedPersonInput!
  mainBeneficiaryUserId: ID
  startDate: DateTimeISO
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

input DeceasedPersonInput {
  addressMunicipality: String!
  addressPostCode: String!
  addressStreet: String!
  addressStreetNumber: String!
  dateOfBirth: DateTimeISO!
  dateOfDeath: DateTimeISO!
  name: String!
  surname: String!
}

input FindNotaryInput {
  addressPostCode: String!
  deceasedPersonDateOfDeath: DateTimeISO!
}

type Mutation {
  addBeneficiariesToProceeding(proceedingId: Int!, userIds: [Int!]!): [Beneficiary!]!
  addChatMessage(body: String!, proceedingId: Int!, userId: Int!): ChatMessage!
  assignMainBeneficiary(beneficiaryId: Int!, proceedingId: Int!): Boolean!
  assignNotary(proceedingId: Int!): Boolean!
  changePassword(newPassword: String!, oldPassword: String!): Boolean!
  closeProceeding(proceedingId: Int!): Boolean!
  confirmEmailVerification(token: String!): Boolean!
  createAddress(data: AddressInput!): Address!
  createArticle(data: CreateArticleInput!): Article!
  createAsset(data: AssetInput!): Asset!
  createBeneficiaries(data: [BeneficiaryInput!]!): [Beneficiary!]!
  createBeneficiary(data: BeneficiaryInput!): Beneficiary!
  createNotary(data: CreateNotaryInput!): Notary!
  createNotaryDateRule(data: NotaryDateRuleInput!): NotaryDateRule!
  createProceeding(data: CreateProceedingInput!): Int!
  deleteAddress(id: Int!): Boolean!
  deleteArticles(ids: [Int!]!): Boolean!
  deleteAsset(id: Int!): Boolean!
  deleteAttachmentsByIds(ids: [ID!]!): Boolean!
  deleteBeneficiaries(id: Int!): Boolean!
  deleteNotary(id: Int!): Boolean!
  deleteNotaryDateRules(ids: Int!): Boolean!
  deleteProceedingsByIds(ids: [Int!]!): Boolean!
  notifyProcedureBeneficiaries(html: String!, proceedingId: Int!, subject: String!): Boolean!
  removeBeneficiaryFromProceeding(beneficiaryId: Int!, proceedingId: Int!): Boolean!
  removeMainBeneficiary(proceedingId: Int!): Boolean!
  requestPasswordReset(email: String!): Boolean!
  resetPassword(newPassword: String!, token: String!): Boolean!
  signIn(login: String!, password: String!): SignInResponse!
  signUp(registerInput: RegisterInput!): User!
  toggleUserConfirmation(userId: Float!): User!
  updateAddress(data: AddressInput!, id: Int!): Address
  updateArticle(data: UpdateArticleInput!, id: Int!): Article
  updateAsset(data: AssetInput!, id: Int!): Asset
  updateBeneficiary(data: BeneficiaryInput!, id: Int!): Beneficiary!
  updateName(name: String!, proceedingId: Int!): Boolean!
  updateNotaryDateRule(data: NotaryDateRuleInput!, id: Int!): NotaryDateRule
  updateProfile(profileInput: ProfileInput!): User!
  updateSendNotifications(sendNotifications: Boolean!): User!
  uploadAttachmentToProceeding(data: UploadFileToProceedingInput!): ID!
}

type Notary {
  id: ID!
  postalCode: String
  user: User
}

type NotaryDateRule {
  endDay: Float!
  endMonth: Float!
  id: ID!
  notaryId: ID!
  startDay: Float!
  startMonth: Float!
}

input NotaryDateRuleInput {
  endDay: Float!
  endMonth: Float!
  notaryId: ID!
  startDay: Float!
  startMonth: Float!
}

type Proceeding {
  beneficiaries: [Beneficiary!]
  deceasedAddress: Address
  deceasedAddressId: ID
  deceasedDateOfBirth: DateTimeISO!
  deceasedDateOfDeath: DateTimeISO!
  deceasedDisplayName: String!
  deceasedName: String!
  endDate: DateTimeISO
  id: ID!
  mainBeneficiary: Beneficiary
  mainBeneficiaryId: ID
  name: String!
  notary: Notary
  notaryId: ID
  procedureAssets: [Asset!]
  startDate: DateTimeISO!
  state: String!
}

input ProfileInput {
  addressInput: AddressInput
  displayName: String
  gender: String
  name: String
  phone: String
  sendNotifications: Boolean
  surname: String
}

type Query {
  _empty: String!
  chat(id: Int!): Chat!
  chatByProceedingId(proceedingId: Int!): Chat!
  findNotary(input: FindNotaryInput!): Notary
  getAddressById(id: Int!): Address
  getAddressSuggestions(query: String!): [AddressSuggestion!]!
  getAllArticles: [Article!]!
  getAllProceedings: [Proceeding!]!
  getAllUserByType(type: String!): [User!]
  getAllUsers: [User!]!
  getArticleById(id: Int!): Article
  getAssetById(id: Int!): Asset
  getAssetsByProceedingId(proceedingId: Int!): [Asset!]!
  getAttachmentById(id: ID!): Attachment
  getAttachmentsByIds(ids: [ID!]!): [Attachment!]!
  getAttachmentsByProceedingId(proceedingId: Int!): [Attachment!]!
  getBeneficiariesByIds(ids: [Int!]!): [Beneficiary!]!
  getBeneficiariesByProceedingId(proceedingId: Int!): [Beneficiary!]!
  getBeneficiaryById(id: Int!): Beneficiary
  getBeneficiaryProceedingsForUser(userId: Int!): [Proceeding!]!
  getNotaryById(id: Int!): Notary
  getNotaryDateRuleById(id: Int!): NotaryDateRule
  getNotaryDateRulesByNotary(notaryId: Int!): [NotaryDateRule!]!
  getNotaryProceedingsForUser(userId: Int!): [Proceeding!]!
  getProceedingById(id: Int!): Proceeding
  getUserByEmail(email: String!): User
  getUserById(id: Float!): User
  notaries: [Notary!]!
}

input RegisterInput {
  email: String!
  name: String!
  password: String!
  surname: String!
}

type SignInResponse {
  token: String!
  user: User!
}

type Subscription {
  newChatMessage(proceedingId: Int!): ChatMessage!
}

input UpdateArticleInput {
  content: String
  coverImage: Upload
  date: DateTimeISO
  title: String
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UploadFileToProceedingInput {
  file: Upload!
  proceedingId: ID!
}

type User {
  address: Address
  addressId: ID
  confirmed: Boolean!
  displayName: String!
  email: String!
  gender: String
  id: ID!
  name: String!
  notaryId: ID
  password: String!
  phone: String
  sendNotifications: Boolean!
  surname: String!
  type: String!
}